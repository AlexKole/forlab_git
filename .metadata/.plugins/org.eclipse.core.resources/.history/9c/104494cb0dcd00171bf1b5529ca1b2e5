package ManagementTool;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Properties;

/**
 * The class keeps constants
 * 
 * @author AlexanderK, YuriyA
 * 
 */
public final class Constants {
	/**
	 * Keeps value for Implicit timeout period in Sec. Will wait specified
	 * timeout for element to appear.
	 */
	public static int iImplicitTimeout = 10;
	
	/**
	 * Keeps base url for XESManager 
	 */
	public static String sBaseUrl = "https://localhost:5643";

	
	/**
	 * Contains constants for statuses on System Monitoring diagram 
	*/
	public static class StatusColors {
		public static String sEmpty = "fill: #81b6e1";  
		public static String sStarted = "fill: #91e1c0";
		public static String sStopped = "fill: #afc1d4";
		public static String sError = "fill: #ff7878";
		public static String sOffline = "fill: #dee0e3";
		public static String sOnline = "fill: #b3ce5f";
	}
	
	/**
	 * Keeps value for timeout period in sec for waiting profile status
	 */
	public static int nProfileStartTimeOut = 120;
	
	/**
	 * class DBConnectionSettings extracts required setting value from file.
	 * Properties file must be located under "TestData/Properties/Batcher/"
	 * List of setting that can be extracted (pass to this function):
     * "url", "host", "port", "user", "password", "dbname", "fullURL"(for dropping DB)    
     * @param sSetting : setting to get value
     * @param sPropertyFile : properties file name
     * @return : setting value or error string
	 * @author EkaterinaG
	 *
	 */
	public static class DBConnectionSettings{
		public static String url;
		public static String host;
		public static String port;
		public static String user;
		public static String password;
		public static String dbname;
		public static String fullURL_Oracle;
		public static String fullURL_MSSQL;
		
		public static String getConnectionSetting(final String sSetting, final String sPropertyFile){
			Properties prop = new Properties();
			try {
				prop.load(new FileInputStream(String.format("TestData/Properties/Batcher/%s", sPropertyFile)));
			}catch (FileNotFoundException e) {	return "DB properties file not found";
				} catch (IOException e) {return "DB properties file not found";		}
			return prop.getProperty(sSetting);
		}
		
		public DBConnectionSettings(String sPropertyFile){
			url = getConnectionSetting("url", sPropertyFile);
			host = getConnectionSetting("host", sPropertyFile);
			port = getConnectionSetting("port", sPropertyFile);
			user = getConnectionSetting("user", sPropertyFile);
			password = getConnectionSetting("password", sPropertyFile);
			dbname = getConnectionSetting("dbname", sPropertyFile);
			fullURL_Oracle = "jdbc:oracle:thin:"+user+"/"+password
					+"@"+host+":"+port+":"+dbname;
			fullURL_MSSQL = "jdbc:sqlserver://"+host+":"+port
					+";user="+user+";password="+password
					+";database="+dbname;
		}
	}
	
}

